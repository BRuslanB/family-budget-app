----------------------
#Step by step create docker containers:
----------------------
1. docker stop <name container>
2. docker rm <name container>
3. docker rmi <name image>
4. docker build -t <name image> .
5. docker tag <name image> <name tag>
6. docker push <name tag>
7. docker-compose up
----------------------
#Docker top commands:
----------------------
#docker build -t <name image> . // create image for app symbol "." mean build file in current directory
docker build -t app-family-budget-image .

#docker run --name <name container> -p<port ext>:<port int> <name image> // create docker container for app
docker run --name app-family-budget-container -p8080:8000 app-family-budget-image // create docker container for app

#docker-compose up -d // create docker-compose container (app & db) where parameter -d running in the background

#docker images // view all images
#docker ls // view all images

#docker rmi <name image / id image> -f // delete image, parameter -f forced deletion
docker rmi app-family-budget-image

#docker ps -a // view all containers

#docker start <name container>
docker start app-family-budget-container

#docker stop <name container>
docker stop app-family-budget-container

#docker rm <name container / id container> // delete container
docker rm app-family-budget-container

#docker logs <name container> // view container logs
docker logs app-family-budget-container

#docker login docker.io // login to docker hub

#docker tag <name image> <name tag>:version //create tag (with name account) for push to docker hub
docker tag app-family-budget-image bruslanb/app-family-budget-image:1.0.3

#docker push <name tag>:version //image(tag) push to docker hub
docker push bruslanb/app-family-budget-image:1.0.3

----------------------
#Additional gradle commands:
----------------------
docker builder prune - remove all unused build cache

./gradlew dependencies // is a command that is used to download and display the project's dependencies.

./gradlew wrapper --gradle-version=7.6 //is a command that generates the Gradle wrapper script for the project.
The wrapper script will be added to the project directory, and it can be used to build the project on machines that do not have Gradle installed.